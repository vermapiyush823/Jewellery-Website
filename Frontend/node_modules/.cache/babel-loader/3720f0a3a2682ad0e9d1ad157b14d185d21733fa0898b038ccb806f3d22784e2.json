{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { loginUser, createUser, signOut, checkAuth, resetPasswordRequest, resetPassword } from './authAPI';\nimport { updateUser } from '../user/userAPI';\nconst initialState = {\n  loggedInUserToken: null,\n  // this should only contain user identity => 'id'/'role'\n  status: 'idle',\n  error: null,\n  userChecked: false,\n  mailSent: false,\n  passwordReset: false\n};\nexport const createUserAsync = createAsyncThunk('user/createUser', async userData => {\n  const response = await createUser(userData);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const loginUserAsync = createAsyncThunk('user/loginUser', async (loginInfo, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  try {\n    const response = await loginUser(loginInfo);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error);\n  }\n});\nexport const checkAuthAsync = createAsyncThunk('user/checkAuth', async () => {\n  try {\n    const response = await checkAuth();\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const resetPasswordRequestAsync = createAsyncThunk('user/resetPasswordRequest', async (email, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n  try {\n    const response = await resetPasswordRequest(email);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error);\n  }\n});\nexport const resetPasswordAsync = createAsyncThunk('user/resetPassword', async (data, _ref3) => {\n  let {\n    rejectWithValue\n  } = _ref3;\n  try {\n    const response = await resetPassword(data);\n    console.log(response);\n    return response.data;\n  } catch (error) {\n    console.log(error);\n    return rejectWithValue(error);\n  }\n});\nexport const signOutAsync = createAsyncThunk('user/signOut', async () => {\n  const response = await signOut();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(createUserAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(createUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUserToken = action.payload;\n    }).addCase(loginUserAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(loginUserAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUserToken = action.payload;\n    }).addCase(loginUserAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      state.error = action.payload;\n    }).addCase(signOutAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(signOutAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUserToken = null;\n    }).addCase(checkAuthAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(checkAuthAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.loggedInUserToken = action.payload;\n      state.userChecked = true;\n    }).addCase(checkAuthAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      state.userChecked = true;\n    }).addCase(resetPasswordRequestAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(resetPasswordRequestAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.mailSent = true;\n    }).addCase(resetPasswordAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(resetPasswordAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.passwordReset = true;\n    }).addCase(resetPasswordAsync.rejected, (state, action) => {\n      state.status = 'idle';\n      state.error = action.payload;\n    });\n  }\n});\nexport const selectLoggedInUser = state => state.auth.loggedInUserToken;\nexport const selectError = state => state.auth.error;\nexport const selectUserChecked = state => state.auth.userChecked;\nexport const selectMailSent = state => state.auth.mailSent;\nexport const selectPasswordReset = state => state.auth.passwordReset;\n\n// export const { } = authSlice.actions;\n\nexport default authSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","loginUser","createUser","signOut","checkAuth","resetPasswordRequest","resetPassword","updateUser","initialState","loggedInUserToken","status","error","userChecked","mailSent","passwordReset","createUserAsync","userData","response","data","loginUserAsync","loginInfo","_ref","rejectWithValue","console","log","checkAuthAsync","resetPasswordRequestAsync","email","_ref2","resetPasswordAsync","_ref3","signOutAsync","authSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","selectLoggedInUser","auth","selectError","selectUserChecked","selectMailSent","selectPasswordReset","reducer"],"sources":["D:/Study/VS Code/Jewellery Website/Frontend/src/features/auth/authSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  loginUser,\n  createUser,\n  signOut,\n  checkAuth,\n  resetPasswordRequest,\n  resetPassword,\n} from './authAPI';\nimport { updateUser } from '../user/userAPI';\n\nconst initialState = {\n  loggedInUserToken: null, // this should only contain user identity => 'id'/'role'\n  status: 'idle',\n  error: null,\n  userChecked: false,\n  mailSent: false,\n  passwordReset:false\n};\n\nexport const createUserAsync = createAsyncThunk(\n  'user/createUser',\n  async (userData) => {\n    const response = await createUser(userData);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const loginUserAsync = createAsyncThunk(\n  'user/loginUser',\n  async (loginInfo, { rejectWithValue }) => {\n    try {\n      const response = await loginUser(loginInfo);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const checkAuthAsync = createAsyncThunk('user/checkAuth', async () => {\n  try {\n    const response = await checkAuth();\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const resetPasswordRequestAsync = createAsyncThunk(\n  'user/resetPasswordRequest',\n  async (email,{rejectWithValue}) => {\n    try {\n      const response = await resetPasswordRequest(email);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return rejectWithValue(error);\n\n    }\n  }\n);\n\nexport const resetPasswordAsync = createAsyncThunk(\n  'user/resetPassword',\n  async (data,{rejectWithValue}) => {\n    try {\n      const response = await resetPassword(data);\n      console.log(response);\n      return response.data;\n    } catch (error) {\n      console.log(error);\n      return rejectWithValue(error);\n\n    }\n  }\n);\n\nexport const signOutAsync = createAsyncThunk(\n  'user/signOut',\n  async () => {\n    const response = await signOut();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const authSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(createUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUserToken = action.payload;\n      })\n      .addCase(loginUserAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(loginUserAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUserToken = action.payload;\n      })\n      .addCase(loginUserAsync.rejected, (state, action) => {\n        state.status = 'idle';\n        state.error = action.payload;\n      })\n      .addCase(signOutAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(signOutAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUserToken = null;\n      })\n      .addCase(checkAuthAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(checkAuthAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.loggedInUserToken = action.payload;\n        state.userChecked = true;\n      })\n      .addCase(checkAuthAsync.rejected, (state, action) => {\n        state.status = 'idle';\n        state.userChecked = true;\n      })\n      .addCase(resetPasswordRequestAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(resetPasswordRequestAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.mailSent = true;\n      })\n      .addCase(resetPasswordAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(resetPasswordAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.passwordReset = true;\n      })\n      .addCase(resetPasswordAsync.rejected, (state, action) => {\n        state.status = 'idle';\n        state.error = action.payload\n      })\n  },\n});\n\nexport const selectLoggedInUser = (state) => state.auth.loggedInUserToken;\nexport const selectError = (state) => state.auth.error;\nexport const selectUserChecked = (state) => state.auth.userChecked;\nexport const selectMailSent = (state) => state.auth.mailSent;\nexport const selectPasswordReset = (state) => state.auth.passwordReset;\n\n// export const { } = authSlice.actions;\n\nexport default authSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}