{"ast":null,"code":"export function fetchProductById(id) {\n  return new Promise(async resolve => {\n    const response = await fetch('/products/' + id);\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function createProduct(product) {\n  return new Promise(async resolve => {\n    const response = await fetch('/products/', {\n      method: 'POST',\n      body: JSON.stringify(product),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function updateProduct(update) {\n  return new Promise(async resolve => {\n    const response = await fetch('/products/' + update.id, {\n      method: 'PATCH',\n      body: JSON.stringify(update),\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchProductsByFilters(filter, sort, pagination, admin) {\n  // filter = {\"category\":[\"smartphone\",\"laptops\"]}\n  // sort = {_sort:\"price\",_order=\"desc\"}\n  // pagination = {_page:1,_limit=10}\n\n  let queryString = '';\n  for (let key in filter) {\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      queryString += `${key}=${categoryValues}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n  if (admin) {\n    queryString += `admin=true`;\n  }\n  return new Promise(async resolve => {\n    const response = await fetch('/products?' + queryString);\n    const data = await response.json();\n    const totalItems = await response.headers.get('X-Total-Count');\n    resolve({\n      data: {\n        products: data,\n        totalItems: +totalItems\n      }\n    });\n  });\n}\nexport function fetchCategories() {\n  return new Promise(async resolve => {\n    const response = await fetch('/categories');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}\nexport function fetchBrands() {\n  return new Promise(async resolve => {\n    const response = await fetch('/brands');\n    const data = await response.json();\n    resolve({\n      data\n    });\n  });\n}","map":{"version":3,"names":["fetchProductById","id","Promise","resolve","response","fetch","data","json","createProduct","product","method","body","JSON","stringify","headers","updateProduct","update","fetchProductsByFilters","filter","sort","pagination","admin","queryString","key","categoryValues","length","totalItems","get","products","fetchCategories","fetchBrands"],"sources":["D:/Study/VS Code/Jewellery Website/Frontend/src/features/product/productAPI.js"],"sourcesContent":["\nexport function fetchProductById(id) {\n  return new Promise(async (resolve) => {\n    const response = await fetch('/products/' + id);\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n\nexport function createProduct(product) {\n  return new Promise(async (resolve) => {\n    const response = await fetch('/products/', {\n      method: 'POST',\n      body: JSON.stringify(product),\n      headers: { 'content-type': 'application/json' },\n    });\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n\nexport function updateProduct(update) {\n  return new Promise(async (resolve) => {\n    const response = await fetch(\n      '/products/' + update.id,\n      {\n        method: 'PATCH',\n        body: JSON.stringify(update),\n        headers: { 'content-type': 'application/json' },\n      }\n    );\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n\nexport function fetchProductsByFilters(filter, sort, pagination, admin) {\n  // filter = {\"category\":[\"smartphone\",\"laptops\"]}\n  // sort = {_sort:\"price\",_order=\"desc\"}\n  // pagination = {_page:1,_limit=10}\n\n  let queryString = '';\n  for (let key in filter) {\n    const categoryValues = filter[key];\n    if (categoryValues.length) {\n      queryString += `${key}=${categoryValues}&`;\n    }\n  }\n  for (let key in sort) {\n    queryString += `${key}=${sort[key]}&`;\n  }\n  for (let key in pagination) {\n    queryString += `${key}=${pagination[key]}&`;\n  }\n  if(admin){\n    queryString += `admin=true`;\n  }\n\n  return new Promise(async (resolve) => {\n    const response = await fetch(\n      '/products?' + queryString\n    );\n    const data = await response.json();\n    const totalItems = await response.headers.get('X-Total-Count');\n    resolve({ data: { products: data, totalItems: +totalItems } });\n  });\n}\n\nexport function fetchCategories() {\n  return new Promise(async (resolve) => {\n    const response = await fetch('/categories');\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n\nexport function fetchBrands() {\n  return new Promise(async (resolve) => {\n    const response = await fetch('/brands');\n    const data = await response.json();\n    resolve({ data });\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}