{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { fetchAllProducts, fetchProductsByFilters, fetchBrands, fetchCategories, fetchProductById, createProduct, updateProduct } from './productAPI';\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems: 0,\n  selectedProduct: null\n};\nexport const fetchProductByIdAsync = createAsyncThunk('product/fetchProductById', async id => {\n  const response = await fetchProductById(id);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchProductsByFiltersAsync = createAsyncThunk('product/fetchProductsByFilters', async _ref => {\n  let {\n    filter,\n    sort,\n    pagination,\n    admin\n  } = _ref;\n  const response = await fetchProductsByFilters(filter, sort, pagination, admin);\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchBrandsAsync = createAsyncThunk('product/fetchBrands', async () => {\n  const response = await fetchBrands();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const fetchCategoriesAsync = createAsyncThunk('product/fetchCategories', async () => {\n  const response = await fetchCategories();\n  // The value we return becomes the `fulfilled` action payload\n  return response.data;\n});\nexport const createProductAsync = createAsyncThunk('product/create', async product => {\n  const response = await createProduct(product);\n  return response.data;\n});\nexport const updateProductAsync = createAsyncThunk('product/update', async update => {\n  const response = await updateProduct(update);\n  return response.data;\n});\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    clearSelectedProduct: state => {\n      state.selectedProduct = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchProductsByFiltersAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products = action.payload.products;\n      state.totalItems = action.payload.totalItems;\n    }).addCase(fetchBrandsAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.brands = action.payload;\n    }).addCase(fetchCategoriesAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.categories = action.payload;\n    }).addCase(fetchProductByIdAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(fetchProductByIdAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.selectedProduct = action.payload;\n    }).addCase(createProductAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(createProductAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      state.products.push(action.payload);\n    }).addCase(updateProductAsync.pending, state => {\n      state.status = 'loading';\n    }).addCase(updateProductAsync.fulfilled, (state, action) => {\n      state.status = 'idle';\n      const index = state.products.findIndex(product => product.id === action.payload.id);\n      state.products[index] = action.payload;\n      state.selectedProduct = action.payload;\n    });\n  }\n});\nexport const {\n  clearSelectedProduct\n} = productSlice.actions;\nexport const selectAllProducts = state => state.product.products;\nexport const selectBrands = state => state.product.brands;\nexport const selectCategories = state => state.product.categories;\nexport const selectProductById = state => state.product.selectedProduct;\nexport const selectProductListStatus = state => state.product.status;\nexport const selectTotalItems = state => state.product.totalItems;\nexport default productSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","fetchAllProducts","fetchProductsByFilters","fetchBrands","fetchCategories","fetchProductById","createProduct","updateProduct","initialState","products","brands","categories","status","totalItems","selectedProduct","fetchProductByIdAsync","id","response","data","fetchProductsByFiltersAsync","_ref","filter","sort","pagination","admin","fetchBrandsAsync","fetchCategoriesAsync","createProductAsync","product","updateProductAsync","update","productSlice","name","reducers","clearSelectedProduct","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","push","index","findIndex","actions","selectAllProducts","selectBrands","selectCategories","selectProductById","selectProductListStatus","selectTotalItems","reducer"],"sources":["D:/Study/VS Code/Jewellery Website/Frontend/src/features/product/productSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport {\n  fetchAllProducts,\n  fetchProductsByFilters,\n  fetchBrands,\n  fetchCategories,\n  fetchProductById,\n  createProduct,\n  updateProduct,\n} from './productAPI';\n\nconst initialState = {\n  products: [],\n  brands: [],\n  categories: [],\n  status: 'idle',\n  totalItems: 0,\n  selectedProduct: null,\n};\n\n\nexport const fetchProductByIdAsync = createAsyncThunk(\n  'product/fetchProductById',\n  async (id) => {\n    const response = await fetchProductById(id);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchProductsByFiltersAsync = createAsyncThunk(\n  'product/fetchProductsByFilters',\n  async ({ filter, sort, pagination, admin }) => {\n    const response = await fetchProductsByFilters(filter, sort, pagination, admin);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const fetchBrandsAsync = createAsyncThunk(\n  'product/fetchBrands',\n  async () => {\n    const response = await fetchBrands();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\nexport const fetchCategoriesAsync = createAsyncThunk(\n  'product/fetchCategories',\n  async () => {\n    const response = await fetchCategories();\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const createProductAsync = createAsyncThunk(\n  'product/create',\n  async (product) => {\n    const response = await createProduct(product);\n    return response.data;\n  }\n);\n\nexport const updateProductAsync = createAsyncThunk(\n  'product/update',\n  async (update) => {\n    const response = await updateProduct(update);\n    return response.data;\n  }\n);\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    clearSelectedProduct:(state)=>{\n      state.selectedProduct = null\n    }\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(fetchProductsByFiltersAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProductsByFiltersAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products = action.payload.products;\n        state.totalItems = action.payload.totalItems;\n      })\n      .addCase(fetchBrandsAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchBrandsAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.brands = action.payload;\n      })\n      .addCase(fetchCategoriesAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchCategoriesAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.categories = action.payload;\n      })\n      .addCase(fetchProductByIdAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(fetchProductByIdAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.selectedProduct = action.payload;\n      })\n      .addCase(createProductAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(createProductAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.products.push(action.payload);\n      })\n      .addCase(updateProductAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(updateProductAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        const index = state.products.findIndex(\n          (product) => product.id === action.payload.id\n        );\n        state.products[index] = action.payload;\n        state.selectedProduct = action.payload;\n\n      });\n  },\n});\n\nexport const { clearSelectedProduct } = productSlice.actions;\n\nexport const selectAllProducts = (state) => state.product.products;\nexport const selectBrands = (state) => state.product.brands;\nexport const selectCategories = (state) => state.product.categories;\nexport const selectProductById = (state) => state.product.selectedProduct;\nexport const selectProductListStatus = (state) => state.product.status;\n\nexport const selectTotalItems = (state) => state.product.totalItems;\n\nexport default productSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}